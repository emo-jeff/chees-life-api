name: 'CMS API'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Auth
      subgroupDescription: ''
      title: Login
      description: Login
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The id of the user.'
        required: true
        example: emohk
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: emohk
        type: string
        custom: []
      remember:
        name: remember
        description: 'The remember me option.'
        required: true
        example: null
        type: boolean
        custom: []
    cleanBodyParameters:
      name: emohk
      password: emohk
      remember: null
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/logout
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Auth
      subgroupDescription: ''
      title: Logout
      description: Logout
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ePZab5va684dh6Ek3Dfgc1V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/user
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Auth
      subgroupDescription: ''
      title: User
      description: 'Retrieve user info'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 38P6vDg4edfE6bcaka51VZh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/user/update-password
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Auth
      subgroupDescription: ''
      title: 'Update Password'
      description: 'Update password'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      currentPassword:
        name: currentPassword
        description: ''
        required: true
        example: recusandae
        type: string
        custom: []
      newPassword:
        name: newPassword
        description: ''
        required: true
        example: recusandae
        type: string
        custom: []
    cleanBodyParameters:
      currentPassword: recusandae
      newPassword: recusandae
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DZkadge6vhfE831b65P4Vca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Users
      subgroupDescription: ''
      title: 'User List'
      description: 'User list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: itaque
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 6
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept id,name,email,role.name'
        required: true
        example: id
        type: string
        custom: []
      'filter[id]':
        name: 'filter[id]'
        description: 'Filter by id'
        required: true
        example: dolores
        type: string
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name'
        required: true
        example: 12
        type: integer
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email'
        required: true
        example: quisquam
        type: string
        custom: []
      'filter[role.name]':
        name: 'filter[role.name]'
        description: 'Filter by role name'
        required: true
        example: recusandae
        type: string
        custom: []
    cleanQueryParameters:
      s: itaque
      p: 6
      sort: id
      'filter[id]': dolores
      'filter[name]': 12
      'filter[email]': quisquam
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D663daZkaVvbe81hf5cE4Pg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Users
      subgroupDescription: ''
      title: 'User Create'
      description: 'User create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: eaque
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: mann.ford@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'F"bH::d&I='
        type: string
        custom: []
      role_name:
        name: role_name
        description: ''
        required: true
        example: inventore
        type: string
        custom: []
    cleanBodyParameters:
      name: eaque
      email: mann.ford@example.net
      password: 'F"bH::d&I='
      role_name: inventore
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vEhZ1ec3dfD48PagVk656ab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Users
      subgroupDescription: ''
      title: 'User Detail'
      description: 'User detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6evadb3g16a5DVc8PEZhfk4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Users
      subgroupDescription: ''
      title: 'User Update'
      description: 'User update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: fschroeder@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: GpS1Px
        type: string
        custom: []
      role_name:
        name: role_name
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanBodyParameters:
      name: nulla
      email: fschroeder@example.org
      password: GpS1Px
      role_name: voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer agebZkP4Edac85f13v66VhD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Users
      subgroupDescription: ''
      title: 'User Destroy'
      description: 'User destroy'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d4a6hb8gaeP3cf1ZDV6Ek5v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reviews
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Reviews
      subgroupDescription: ''
      title: 'Review List'
      description: 'Review list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: sit
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 8
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept review_date,rating,enable,translations.customer_name#en,translations.customer_name#tc'
        required: true
        example: '-id'
        type: string
        custom: []
      'filter[review_date]':
        name: 'filter[review_date]'
        description: 'Filter by review_date'
        required: true
        example: perspiciatis
        type: string
        custom: []
      'filter[rating]':
        name: 'filter[rating]'
        description: 'Filter by rating'
        required: true
        example: 8
        type: integer
        custom: []
      'filter[enable]':
        name: 'filter[enable]'
        description: 'Filter by enable'
        required: true
        example: 3
        type: integer
        custom: []
      'filter[translations.customer_name]':
        name: 'filter[translations.customer_name]'
        description: 'Filter by translations.customer_name'
        required: true
        example: quis
        type: string
        custom: []
      'filter[translations.content]':
        name: 'filter[translations.content]'
        description: 'Filter by translations.content'
        required: true
        example: commodi
        type: string
        custom: []
    cleanQueryParameters:
      s: sit
      p: 8
      sort: '-id'
      'filter[review_date]': perspiciatis
      'filter[rating]': 8
      'filter[enable]': 3
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ve64hc613ZDPb5gVaEdak8f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reviews
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Reviews
      subgroupDescription: ''
      title: 'Review Create'
      description: 'Review create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      review_date:
        name: review_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      rating:
        name: rating
        description: 'Must be at least 0. Must not be greater than 5.'
        required: true
        example: 3
        type: integer
        custom: []
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.customer_name:
        name: en.customer_name
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      tc.customer_name:
        name: tc.customer_name
        description: ''
        required: true
        example: voluptatibus
        type: string
        custom: []
      en.content:
        name: en.content
        description: ''
        required: true
        example: iure
        type: string
        custom: []
      tc.content:
        name: tc.content
        description: ''
        required: true
        example: et
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      review_date: '2023-06-09T06:58:47'
      rating: 3
      en:
        customer_name: voluptatem
        content: iure
      tc:
        customer_name: voluptatibus
        content: et
      enable: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 84af5c1Z3P6bDa6EekhdgVv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/reviews/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Reviews
      subgroupDescription: ''
      title: 'Review Detail'
      description: 'Review detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b638EahvkPe4g1fDcVdZa65'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/reviews/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Reviews
      subgroupDescription: ''
      title: 'Review Update'
      description: 'Review update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      review_date:
        name: review_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      rating:
        name: rating
        description: 'Must be at least 0. Must not be greater than 5.'
        required: true
        example: 5
        type: integer
        custom: []
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.customer_name:
        name: en.customer_name
        description: ''
        required: true
        example: dolore
        type: string
        custom: []
      tc.customer_name:
        name: tc.customer_name
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      en.content:
        name: en.content
        description: ''
        required: true
        example: et
        type: string
        custom: []
      tc.content:
        name: tc.content
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      review_date: '2023-06-09T06:58:47'
      rating: 5
      en:
        customer_name: dolore
        content: et
      tc:
        customer_name: consequatur
        content: ut
      enable: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zv5EdDkf43Pgba1V6e86hac'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/reviews/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Reviews
      subgroupDescription: ''
      title: 'Review Delete'
      description: 'Review delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eD6va5f4hd3Zk1gPacVE8b6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/districts
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'District List'
      description: 'District list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: et
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 8
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept sequence,name,enable,translations.name#en,translations.name#tc'
        required: true
        example: '-id'
        type: string
        custom: []
      'filter[sequence]':
        name: 'filter[sequence]'
        description: 'Filter by sequence'
        required: true
        example: 15
        type: integer
        custom: []
      'filter[enable]':
        name: 'filter[enable]'
        description: 'Filter by enable'
        required: true
        example: 16
        type: integer
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name'
        required: true
        example: adipisci
        type: string
        custom: []
      'filter[translations.name]':
        name: 'filter[translations.name]'
        description: 'Filter by translations.name#en'
        required: true
        example: inventore
        type: string
        custom: []
    cleanQueryParameters:
      s: et
      p: 8
      sort: '-id'
      'filter[sequence]': 15
      'filter[enable]': 16
      'filter[name]': adipisci
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h4fP8VDdZ1Ec3eg6v56kaab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/districts
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'District Create'
      description: 'District create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      extra_charge:
        name: extra_charge
        description: ''
        required: true
        example: 6
        type: integer
        custom: []
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.name:
        name: en.name
        description: ''
        required: true
        example: voluptas
        type: string
        custom: []
      tc.name:
        name: tc.name
        description: ''
        required: true
        example: magnam
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      extra_charge: 6
      en:
        name: voluptas
      tc:
        name: magnam
      enable: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kPZa35V16fE8dh4gbacveD6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/districts/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'District Detail'
      description: 'District detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the district.'
        required: true
        example: 4
        type: integer
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 386cVebaD5d4kafgEhP6vZ1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/districts/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'District Update'
      description: 'District update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the district.'
        required: true
        example: 15
        type: integer
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      extra_charge:
        name: extra_charge
        description: ''
        required: true
        example: 10
        type: integer
        custom: []
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.name:
        name: en.name
        description: ''
        required: true
        example: nostrum
        type: string
        custom: []
      tc.name:
        name: tc.name
        description: ''
        required: true
        example: ducimus
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      extra_charge: 10
      en:
        name: nostrum
      tc:
        name: ducimus
      enable: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer af8dkZ6a4g5Ev1eV6c3PDbh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/districts/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'District Delete'
      description: 'District delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the district.'
        required: true
        example: 18
        type: integer
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vhPce3f6aZD8k4daV5gb61E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Category List'
      description: 'Category list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: facilis
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 10
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept sequence,slug,enable,translations.name#en,translations.name#tc,translations.description#en,translations.description#tc,translations.title#en,translations.title#tc'
        required: true
        example: '-sequence'
        type: string
        custom: []
      'filter[sequence]':
        name: 'filter[sequence]'
        description: 'Filter by sequence'
        required: true
        example: 7
        type: integer
        custom: []
      'filter[enable]':
        name: 'filter[enable]'
        description: 'Filter by enable'
        required: true
        example: 6
        type: integer
        custom: []
      'filter[slug]':
        name: 'filter[slug]'
        description: 'Filter by slug'
        required: true
        example: neque
        type: string
        custom: []
      'filter[translations.name]':
        name: 'filter[translations.name]'
        description: 'Filter by name'
        required: true
        example: nisi
        type: string
        custom: []
      'filter[translations.description]':
        name: 'filter[translations.description]'
        description: 'Filter by description'
        required: true
        example: quia
        type: string
        custom: []
      'filter[translations.title]':
        name: 'filter[translations.title]'
        description: 'Filter by title'
        required: true
        example: pariatur
        type: string
        custom: []
    cleanQueryParameters:
      s: facilis
      p: 10
      sort: '-sequence'
      'filter[sequence]': 7
      'filter[enable]': 6
      'filter[slug]': neque
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6kfagVe3c8hP1bEa4d56vD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Category Create'
      description: 'Category create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.name:
        name: en.name
        description: ''
        required: true
        example: tempora
        type: string
        custom: []
      tc.name:
        name: tc.name
        description: ''
        required: true
        example: consectetur
        type: string
        custom: []
      en.title:
        name: en.title
        description: ''
        required: true
        example: ratione
        type: string
        custom: []
      tc.title:
        name: tc.title
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      en.description:
        name: en.description
        description: ''
        required: true
        example: 'In ipsam omnis sed consequatur.'
        type: string
        custom: []
      tc.description:
        name: tc.description
        description: ''
        required: true
        example: 'Et ducimus laborum sequi.'
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      en:
        name: tempora
        title: ratione
        description: 'In ipsam omnis sed consequatur.'
      tc:
        name: consectetur
        title: aut
        description: 'Et ducimus laborum sequi.'
      enable: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fd8b4e5P6a3vVk1cD6EZhga'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Category Detail'
      description: 'Category detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4fVEad6ch5D6ab13vPg8ekZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Category Update'
      description: 'Category update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 12
        type: integer
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.name:
        name: en.name
        description: ''
        required: true
        example: tenetur
        type: string
        custom: []
      tc.name:
        name: tc.name
        description: ''
        required: true
        example: fuga
        type: string
        custom: []
      en.title:
        name: en.title
        description: ''
        required: true
        example: culpa
        type: string
        custom: []
      tc.title:
        name: tc.title
        description: ''
        required: true
        example: dolorum
        type: string
        custom: []
      en.description:
        name: en.description
        description: ''
        required: true
        example: 'Sit quo ut aliquid et voluptatem voluptatem.'
        type: string
        custom: []
      tc.description:
        name: tc.description
        description: ''
        required: true
        example: 'Molestiae vel velit provident et.'
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      en:
        name: tenetur
        title: culpa
        description: 'Sit quo ut aliquid et voluptatem voluptatem.'
      tc:
        name: fuga
        title: dolorum
        description: 'Molestiae vel velit provident et.'
      enable: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hda1cPDv36VkZE854b6gefa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Category Detail'
      description: 'Category detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gd3ae61c468Pbh5fVavZDkE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/customers
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Customers
      subgroupDescription: ''
      title: 'Customer List'
      description: 'Customer list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: architecto
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 14
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept id,name,gender,email,address,tel,hkid,birthday'
        required: true
        example: '-id'
        type: string
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name'
        required: true
        example: impedit
        type: string
        custom: []
      'filter[gender]':
        name: 'filter[gender]'
        description: 'Filter by gender'
        required: true
        example: molestias
        type: string
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email'
        required: true
        example: doloremque
        type: string
        custom: []
      'filter[address]':
        name: 'filter[address]'
        description: 'Filter by address'
        required: true
        example: et
        type: string
        custom: []
      'filter[tel]':
        name: 'filter[tel]'
        description: 'Filter by tel'
        required: true
        example: rem
        type: string
        custom: []
      'filter[hkid]':
        name: 'filter[hkid]'
        description: 'Filter by hkid'
        required: true
        example: doloremque
        type: string
        custom: []
      'filter[birthday]':
        name: 'filter[birthday]'
        description: 'Filter by birthday'
        required: true
        example: nulla
        type: string
        custom: []
    cleanQueryParameters:
      s: architecto
      p: 14
      sort: '-id'
      'filter[name]': impedit
      'filter[gender]': molestias
      'filter[email]': doloremque
      'filter[address]': et
      'filter[tel]': rem
      'filter[hkid]': doloremque
      'filter[birthday]': nulla
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6d8Eb4aP61ha5cZk3fvDgV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customers
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Customers
      subgroupDescription: ''
      title: 'Customer Create'
      description: 'Customer create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: quia
        type: string
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: dolores
        type: string
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      hkid:
        name: hkid
        description: ''
        required: true
        example: commodi
        type: string
        custom: []
      tel:
        name: tel
        description: ''
        required: true
        example: perspiciatis
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: usporer@example.org
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: totam
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '-2TjCnxZo*-'
        type: string
        custom: []
      is_verified:
        name: is_verified
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      name: quia
      gender: dolores
      birthday: '2023-06-09T06:58:47'
      hkid: commodi
      tel: perspiciatis
      email: usporer@example.org
      address: totam
      password: '-2TjCnxZo*-'
      is_verified: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g3fP4cEZ8hv1daVD5bea66k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/customers/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Customers
      subgroupDescription: ''
      title: 'Customer Detail'
      description: 'Customer detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 19
        type: integer
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1abVDvP8Z6g6acdEh4ef5k3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/customers/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Customers
      subgroupDescription: ''
      title: 'Customer Update'
      description: 'Customer update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 12
        type: integer
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: magnam
        type: string
        custom: []
      gender:
        name: gender
        description: ''
        required: true
        example: ab
        type: string
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      hkid:
        name: hkid
        description: ''
        required: true
        example: odit
        type: string
        custom: []
      tel:
        name: tel
        description: ''
        required: true
        example: in
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: kay56@example.org
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: false
        example: quam
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: false
        example: '8!j3QJJ[I)'
        type: string
        custom: []
      is_verified:
        name: is_verified
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      name: magnam
      gender: ab
      birthday: '2023-06-09T06:58:47'
      hkid: odit
      tel: in
      email: kay56@example.org
      address: quam
      password: '8!j3QJJ[I)'
      is_verified: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 613a4fVbg6dh8vPZ5DkeEca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/customers/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Customers
      subgroupDescription: ''
      title: 'Customer Destroy'
      description: 'Customer destroy'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 20
        type: integer
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6648c5vDafPeg3bkEZ1hVad'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/banners
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Banner List'
      description: 'Banner list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: ipsa
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 13
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept id,sequence,enable'
        required: true
        example: '-id'
        type: string
        custom: []
      'filter[id]':
        name: 'filter[id]'
        description: 'Filter by id'
        required: true
        example: quam
        type: string
        custom: []
      'filter[sequence]':
        name: 'filter[sequence]'
        description: 'Filter by sequence'
        required: true
        example: 13
        type: integer
        custom: []
      'filter[enable]':
        name: 'filter[enable]'
        description: 'Filter by enable'
        required: true
        example: 18
        type: integer
        custom: []
    cleanQueryParameters:
      s: ipsa
      p: 13
      sort: '-id'
      'filter[id]': quam
      'filter[sequence]': 13
      'filter[enable]': 18
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ee6v16c48fbVgdk5a3hZPaD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/banners/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Banner Detail'
      description: 'Banner detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the banner.'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aVv45PEa66gebfkhd31cD8Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/banners/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Banner Update'
      description: 'Banner update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the banner.'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: image
        required: true
        example: null
        type: file
        custom: []
      enable:
        name: enable
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      enable: true
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aVEchZdb16P8fkg6D35eav4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/banners/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Banner Delete'
      description: 'Banner delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the banner.'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fba8chZ36gPkeDV4v6aE15d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/services
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Service List'
      description: 'Service list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: error
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 7
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept sequence,slug,price,hot,enable,translations.title#en,translations.title#tc,translations.subtitle#en,translations.subtitle#tc'
        required: true
        example: '-sequence'
        type: string
        custom: []
      'filter[sequence]':
        name: 'filter[sequence]'
        description: 'Filter by sequence'
        required: true
        example: aliquam
        type: string
        custom: []
      'filter[slug]':
        name: 'filter[slug]'
        description: 'Filter by slug'
        required: true
        example: ex
        type: string
        custom: []
      'filter[price]':
        name: 'filter[price]'
        description: 'Filter by price'
        required: true
        example: ut
        type: string
        custom: []
      'filter[hot]':
        name: 'filter[hot]'
        description: 'Filter by hot'
        required: true
        example: omnis
        type: string
        custom: []
      'filter[enable]':
        name: 'filter[enable]'
        description: 'Filter by enable'
        required: true
        example: optio
        type: string
        custom: []
      'filter[translations.title]':
        name: 'filter[translations.title]'
        description: 'Filter by title'
        required: true
        example: ea
        type: string
        custom: []
      'filter[translations.subtitle]':
        name: 'filter[translations.subtitle]'
        description: 'Filter by subtitle'
        required: true
        example: et
        type: string
        custom: []
    cleanQueryParameters:
      s: error
      p: 7
      sort: '-sequence'
      'filter[sequence]': aliquam
      'filter[slug]': ex
      'filter[price]': ut
      'filter[hot]': omnis
      'filter[enable]': optio
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kvg45fbaDhZd6V3E1P6cea8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/services
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Service Create'
      description: 'Service create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      price:
        name: price
        description: ''
        required: true
        example: 13
        type: integer
        custom: []
      hot:
        name: hot
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.title:
        name: en.title
        description: ''
        required: true
        example: non
        type: string
        custom: []
      tc.title:
        name: tc.title
        description: ''
        required: true
        example: modi
        type: string
        custom: []
      en.subtitle:
        name: en.subtitle
        description: ''
        required: false
        example: et
        type: string
        custom: []
      tc.subtitle:
        name: tc.subtitle
        description: ''
        required: false
        example: cumque
        type: string
        custom: []
      image:
        name: image
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      'service_descriptions[].en':
        name: 'service_descriptions[].en'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      service_descriptions:
        name: service_descriptions
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'service_descriptions[].en.description':
        name: 'service_descriptions[].en.description'
        description: ''
        required: true
        example: 'Et quo iste fugiat aspernatur rerum aut et.'
        type: string
        custom: []
      'service_descriptions[].tc':
        name: 'service_descriptions[].tc'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'service_descriptions[].tc.description':
        name: 'service_descriptions[].tc.description'
        description: ''
        required: true
        example: 'Ipsum deleniti aut nesciunt sunt.'
        type: string
        custom: []
      'service_details[].en':
        name: 'service_details[].en'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      service_details:
        name: service_details
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'service_details[].en.title':
        name: 'service_details[].en.title'
        description: ''
        required: true
        example: voluptatum
        type: string
        custom: []
      'service_details[].tc':
        name: 'service_details[].tc'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'service_details[].tc.title':
        name: 'service_details[].tc.title'
        description: ''
        required: true
        example: quod
        type: string
        custom: []
      'service_details[].en.content':
        name: 'service_details[].en.content'
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      'service_details[].tc.content':
        name: 'service_details[].tc.content'
        description: ''
        required: true
        example: ullam
        type: string
        custom: []
    cleanBodyParameters:
      price: 13
      hot: true
      enable: true
      en:
        title: non
        subtitle: et
      tc:
        title: modi
        subtitle: cumque
      service_descriptions:
        -
          en:
            description: 'Et quo iste fugiat aspernatur rerum aut et.'
          tc:
            description: 'Ipsum deleniti aut nesciunt sunt.'
      service_details:
        -
          en:
            title: voluptatum
            content: necessitatibus
          tc:
            title: quod
            content: ullam
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ac1bV4k86h65dZDE3gafPev'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/services/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Service Detail'
      description: 'Service detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vb1vg5fDE6ZPa438khcd6ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/services/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Service Update'
      description: 'Service update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      price:
        name: price
        description: ''
        required: true
        example: 10
        type: integer
        custom: []
      hot:
        name: hot
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      en:
        name: en
        description: ''
        required: true
        example: []
        type: object
        custom: []
      tc:
        name: tc
        description: ''
        required: true
        example: []
        type: object
        custom: []
      en.title:
        name: en.title
        description: ''
        required: true
        example: distinctio
        type: string
        custom: []
      tc.title:
        name: tc.title
        description: ''
        required: true
        example: impedit
        type: string
        custom: []
      en.subtitle:
        name: en.subtitle
        description: ''
        required: false
        example: quia
        type: string
        custom: []
      tc.subtitle:
        name: tc.subtitle
        description: ''
        required: false
        example: itaque
        type: string
        custom: []
      image:
        name: image
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      service_descriptions:
        name: service_descriptions
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'service_descriptions[].id':
        name: 'service_descriptions[].id'
        description: ''
        required: false
        example: 12
        type: integer
        custom: []
      'service_descriptions[].sequence':
        name: 'service_descriptions[].sequence'
        description: ''
        required: false
        example: 12
        type: integer
        custom: []
      'service_descriptions[].en':
        name: 'service_descriptions[].en'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'service_descriptions[].en.description':
        name: 'service_descriptions[].en.description'
        description: ''
        required: true
        example: 'Quaerat impedit hic officiis hic at placeat.'
        type: string
        custom: []
      'service_descriptions[].tc':
        name: 'service_descriptions[].tc'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'service_descriptions[].tc.description':
        name: 'service_descriptions[].tc.description'
        description: ''
        required: true
        example: 'Velit ab quia laborum nihil sit inventore est voluptatum.'
        type: string
        custom: []
      service_details:
        name: service_details
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'service_details[].id':
        name: 'service_details[].id'
        description: ''
        required: false
        example: 1
        type: integer
        custom: []
      'service_details[].sequence':
        name: 'service_details[].sequence'
        description: ''
        required: false
        example: 15
        type: integer
        custom: []
      'service_details[].en':
        name: 'service_details[].en'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'service_details[].en.title':
        name: 'service_details[].en.title'
        description: ''
        required: true
        example: doloribus
        type: string
        custom: []
      'service_details[].tc':
        name: 'service_details[].tc'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'service_details[].tc.title':
        name: 'service_details[].tc.title'
        description: ''
        required: true
        example: non
        type: string
        custom: []
      'service_details[].en.content':
        name: 'service_details[].en.content'
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
      'service_details[].tc.content':
        name: 'service_details[].tc.content'
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
    cleanBodyParameters:
      price: 10
      hot: false
      enable: false
      en:
        title: distinctio
        subtitle: quia
      tc:
        title: impedit
        subtitle: itaque
      service_descriptions:
        -
          id: 12
          sequence: 12
          en:
            description: 'Quaerat impedit hic officiis hic at placeat.'
          tc:
            description: 'Velit ab quia laborum nihil sit inventore est voluptatum.'
      service_details:
        -
          id: 1
          sequence: 15
          en:
            title: doloribus
            content: nulla
          tc:
            title: non
            content: consequatur
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PDke1a3g6Zd5EVc4vbf8ah6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/services/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Service Delete'
      description: 'Service delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the service.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fVDk4h1ec36ab8vadP5Z6Eg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/roles
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Role List'
      description: 'Role list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: facilis
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 14
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept id,sequence'
        required: true
        example: id
        type: string
        custom: []
      'filter[id]':
        name: 'filter[id]'
        description: 'Filter by id'
        required: true
        example: ducimus
        type: string
        custom: []
      'filter[sequence]':
        name: 'filter[sequence]'
        description: 'Filter by sequence'
        required: true
        example: 16
        type: integer
        custom: []
    cleanQueryParameters:
      s: facilis
      p: 14
      sort: id
      'filter[id]': ducimus
      'filter[sequence]': 16
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Ea618DZdg5bPVeahcvk43f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/roles
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Role Create'
      description: 'Role create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolor
        type: string
        custom: []
      permissions:
        name: permissions
        description: ''
        required: false
        example:
          - et
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      name: dolor
      permissions:
        - et
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5EZk1Pcvfga83D4bVha6d6e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/roles/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Role Detail'
      description: 'Role detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6k3vaDeVdf6Pahc5g8b14ZE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/roles/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Role Update'
      description: 'Role update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: alias
        type: string
        custom: []
      permissions:
        name: permissions
        description: ''
        required: false
        example:
          - hic
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      name: alias
      permissions:
        - hic
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 861VEa4feD5bh3a6ZdkcPvg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/roles/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: 'Role Delete'
      description: 'Role delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gPE356VD1ce6aZk8vdf4hab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/customer_histories
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Customer History'
      subgroupDescription: ''
      title: 'Customer History List'
      description: 'Customer history list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: est
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 8
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept customer_id,name,gender,birthday,hkid,tel,email,address,amount,created_at,translation.district#en,translation.district#tc,translation.title#en,translation.title#tc'
        required: true
        example: '-created_at'
        type: string
        custom: []
      'filter[customer_id]':
        name: 'filter[customer_id]'
        description: 'Filter by customer_id'
        required: true
        example: aut
        type: string
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by name'
        required: true
        example: veniam
        type: string
        custom: []
      'filter[gender]':
        name: 'filter[gender]'
        description: 'Filter by gender'
        required: true
        example: molestiae
        type: string
        custom: []
      'filter[birthday]':
        name: 'filter[birthday]'
        description: 'Filter by birthday'
        required: true
        example: nihil
        type: string
        custom: []
      'filter[hkid]':
        name: 'filter[hkid]'
        description: 'Filter by hkid'
        required: true
        example: ab
        type: string
        custom: []
      'filter[tel]':
        name: 'filter[tel]'
        description: 'Filter by tel'
        required: true
        example: inventore
        type: string
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by email'
        required: true
        example: sit
        type: string
        custom: []
      'filter[address]':
        name: 'filter[address]'
        description: 'Filter by address'
        required: true
        example: illo
        type: string
        custom: []
      'filter[amount]':
        name: 'filter[amount]'
        description: 'Filter by amount'
        required: true
        example: quasi
        type: string
        custom: []
      'filter[created_at]':
        name: 'filter[created_at]'
        description: 'Filter by created_at'
        required: true
        example: non
        type: string
        custom: []
      'filter[translations.district]':
        name: 'filter[translations.district]'
        description: 'Filter by district'
        required: true
        example: et
        type: string
        custom: []
    cleanQueryParameters:
      s: est
      p: 8
      sort: '-created_at'
      'filter[customer_id]': aut
      'filter[name]': veniam
      'filter[gender]': molestiae
      'filter[birthday]': nihil
      'filter[hkid]': ab
      'filter[tel]': inventore
      'filter[email]': sit
      'filter[address]': illo
      'filter[amount]': quasi
      'filter[created_at]': non
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zh8fb4P6dDEgeVacv1a6k53'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customer_histories
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Customer History'
      subgroupDescription: ''
      title: 'Customer History Store'
      description: 'Customer history store'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_id:
        name: customer_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: recusandae
        type: string
        custom: []
      gender:
        name: gender
        description: 'Must be one of <code>F</code> or <code>M</code>.'
        required: true
        example: M
        type: string
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      hkid:
        name: hkid
        description: ''
        required: true
        example: nesciunt
        type: string
        custom: []
      tel:
        name: tel
        description: ''
        required: true
        example: et
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: russ56@example.com
        type: string
        custom: []
      medical_record:
        name: medical_record
        description: ''
        required: true
        example: ullam
        type: string
        custom: []
      covid_diagnosed:
        name: covid_diagnosed
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      covid_close_contacts:
        name: covid_close_contacts
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      covid_date:
        name: covid_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      height:
        name: height
        description: 'Must be between 0 and 3 digits.'
        required: true
        example: ''
        type: string
        custom: []
      weight:
        name: weight
        description: 'Must be between 0 and 3 digits.'
        required: true
        example: '61'
        type: string
        custom: []
      blood_date:
        name: blood_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      blood_time:
        name: blood_time
        description: ''
        required: true
        example: ullam
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      report:
        name: report
        description: 'Must be one of <code>email</code> or <code>doctor</code>.'
        required: true
        example: doctor
        type: string
        custom: []
      remark:
        name: remark
        description: ''
        required: false
        example: laborum
        type: string
        custom: []
      paid:
        name: paid
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      en:
        name: en
        description: ''
        required: false
        example: []
        type: object
        custom: []
      en.district:
        name: en.district
        description: ''
        required: true
        example: sapiente
        type: string
        custom: []
      tc:
        name: tc
        description: ''
        required: false
        example: []
        type: object
        custom: []
      tc.district:
        name: tc.district
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      en.subtitle:
        name: en.subtitle
        description: ''
        required: false
        example: sit
        type: string
        custom: []
      tc.subtitle:
        name: tc.subtitle
        description: ''
        required: false
        example: tenetur
        type: string
        custom: []
      customer_history_details:
        name: customer_history_details
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'customer_history_details[].price':
        name: 'customer_history_details[].price'
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      'customer_history_details[].en':
        name: 'customer_history_details[].en'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'customer_history_details[].en.title':
        name: 'customer_history_details[].en.title'
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      'customer_history_details[].tc':
        name: 'customer_history_details[].tc'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'customer_history_details[].tc.title':
        name: 'customer_history_details[].tc.title'
        description: ''
        required: true
        example: est
        type: string
        custom: []
    cleanBodyParameters:
      name: recusandae
      gender: M
      birthday: '2023-06-09T06:58:47'
      hkid: nesciunt
      tel: et
      email: russ56@example.com
      medical_record: ullam
      covid_diagnosed: false
      covid_close_contacts: true
      covid_date: '2023-06-09T06:58:47'
      height: ''
      weight: '61'
      blood_date: '2023-06-09T06:58:47'
      blood_time: ullam
      address: aut
      report: doctor
      remark: laborum
      paid: false
      en:
        district: sapiente
        subtitle: sit
      tc:
        district: necessitatibus
        subtitle: tenetur
      customer_history_details:
        -
          price: rerum
          en:
            title: ut
          tc:
            title: est
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V81cg36fhv65a4bdeZkDEPa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/customer_histories/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Customer History'
      subgroupDescription: ''
      title: 'Customer History Detail'
      description: 'Customer history detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer history.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 84fbZc51Eg6hdeVPDva3ak6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/customer_histories/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Customer History'
      subgroupDescription: ''
      title: 'Customer History Update'
      description: 'Customer history update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer history.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_id:
        name: customer_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: fugit
        type: string
        custom: []
      gender:
        name: gender
        description: 'Must be one of <code>F</code> or <code>M</code>.'
        required: true
        example: F
        type: string
        custom: []
      birthday:
        name: birthday
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      hkid:
        name: hkid
        description: ''
        required: true
        example: enim
        type: string
        custom: []
      tel:
        name: tel
        description: ''
        required: true
        example: rem
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: hobart95@example.com
        type: string
        custom: []
      medical_record:
        name: medical_record
        description: ''
        required: true
        example: voluptate
        type: string
        custom: []
      covid_diagnosed:
        name: covid_diagnosed
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      covid_close_contacts:
        name: covid_close_contacts
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      covid_date:
        name: covid_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      height:
        name: height
        description: 'Must be between 0 and 3 digits.'
        required: true
        example: '86'
        type: string
        custom: []
      weight:
        name: weight
        description: 'Must be between 0 and 3 digits.'
        required: true
        example: ''
        type: string
        custom: []
      blood_date:
        name: blood_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      blood_time:
        name: blood_time
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      report:
        name: report
        description: 'Must be one of <code>email</code> or <code>doctor</code>.'
        required: true
        example: doctor
        type: string
        custom: []
      remark:
        name: remark
        description: ''
        required: false
        example: ea
        type: string
        custom: []
      paid:
        name: paid
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      en:
        name: en
        description: ''
        required: false
        example: []
        type: object
        custom: []
      en.district:
        name: en.district
        description: ''
        required: true
        example: necessitatibus
        type: string
        custom: []
      tc:
        name: tc
        description: ''
        required: false
        example: []
        type: object
        custom: []
      tc.district:
        name: tc.district
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      en.subtitle:
        name: en.subtitle
        description: ''
        required: false
        example: accusantium
        type: string
        custom: []
      tc.subtitle:
        name: tc.subtitle
        description: ''
        required: false
        example: sed
        type: string
        custom: []
      customer_history_details:
        name: customer_history_details
        description: ''
        required: false
        example:
          - []
        type: 'object[]'
        custom: []
      'customer_history_details[].price':
        name: 'customer_history_details[].price'
        description: ''
        required: true
        example: illum
        type: string
        custom: []
      'customer_history_details[].en':
        name: 'customer_history_details[].en'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'customer_history_details[].en.title':
        name: 'customer_history_details[].en.title'
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
      'customer_history_details[].tc':
        name: 'customer_history_details[].tc'
        description: ''
        required: false
        example: []
        type: object
        custom: []
      'customer_history_details[].tc.title':
        name: 'customer_history_details[].tc.title'
        description: ''
        required: true
        example: provident
        type: string
        custom: []
    cleanBodyParameters:
      name: fugit
      gender: F
      birthday: '2023-06-09T06:58:47'
      hkid: enim
      tel: rem
      email: hobart95@example.com
      medical_record: voluptate
      covid_diagnosed: false
      covid_close_contacts: false
      covid_date: '2023-06-09T06:58:47'
      height: '86'
      weight: ''
      blood_date: '2023-06-09T06:58:47'
      blood_time: vel
      address: necessitatibus
      report: doctor
      remark: ea
      paid: false
      en:
        district: necessitatibus
        subtitle: accusantium
      tc:
        district: consequatur
        subtitle: sed
      customer_history_details:
        -
          price: illum
          en:
            title: deleniti
          tc:
            title: provident
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z34DcbEdea8vfagh516P6Vk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/customer_histories/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Customer History'
      subgroupDescription: ''
      title: 'Customer History Delete'
      description: 'Customer history delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer history.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3fkag8cVbPh66Zv1aE5D4de'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/timeslots
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Timeslots
      subgroupDescription: ''
      title: 'User List'
      description: 'User list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: fuga
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 15
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept available_date,enable'
        required: true
        example: '-available_date'
        type: string
        custom: []
      'filter[available]':
        name: 'filter[available]'
        description: 'Filter by available'
        required: true
        example: error
        type: string
        custom: []
      'filter[enable]':
        name: 'filter[enable]'
        description: 'Filter by enable'
        required: true
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      s: fuga
      p: 15
      sort: '-available_date'
      'filter[available]': error
      'filter[enable]': 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6hbZfE8Ve16kdP3a5aDv4gc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/timeslots
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Timeslots
      subgroupDescription: ''
      title: 'User Create'
      description: 'User create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      date_from:
        name: date_from
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      date_to:
        name: date_to
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      time_from:
        name: time_from
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: true
        example: '06:58:47'
        type: string
        custom: []
      time_to:
        name: time_to
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: true
        example: '06:58:47'
        type: string
        custom: []
      interval:
        name: interval
        description: ''
        required: true
        example: 8
        type: integer
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      quota:
        name: quota
        description: ''
        required: true
        example: 11
        type: integer
        custom: []
    cleanBodyParameters:
      date_from: '2023-06-09T06:58:47'
      date_to: '2023-06-09T06:58:47'
      time_from: '06:58:47'
      time_to: '06:58:47'
      interval: 8
      enable: false
      quota: 11
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer avecD8PgE6had14fkb5Z3V6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/timeslots/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Timeslots
      subgroupDescription: ''
      title: 'User Detail'
      description: 'User detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timeslot.'
        required: true
        example: 31
        type: integer
        custom: []
    cleanUrlParameters:
      id: 31
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ea6ve8Zfdc3D6ha1bV5kPg4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/timeslots/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Timeslots
      subgroupDescription: ''
      title: 'User Update'
      description: 'User update'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timeslot.'
        required: true
        example: 31
        type: integer
        custom: []
    cleanUrlParameters:
      id: 31
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      available_date:
        name: available_date
        description: 'Must be a valid date.'
        required: true
        example: '2023-06-09T06:58:47'
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      timeslot_quotas:
        name: timeslot_quotas
        description: ''
        required: true
        example:
          - voluptatem
        type: 'integer[]'
        custom: []
      'timeslot_quotas[].id':
        name: 'timeslot_quotas[].id'
        description: ''
        required: false
        example: 6
        type: integer
        custom: []
      'timeslot_quotas[].from':
        name: 'timeslot_quotas[].from'
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: true
        example: '06:58:47'
        type: string
        custom: []
      'timeslot_quotas[].to':
        name: 'timeslot_quotas[].to'
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: true
        example: '06:58:47'
        type: string
        custom: []
      'timeslot_quotas[].quota':
        name: 'timeslot_quotas[].quota'
        description: ''
        required: true
        example: 3
        type: integer
        custom: []
    cleanBodyParameters:
      available_date: '2023-06-09T06:58:47'
      enable: true
      timeslot_quotas:
        - voluptatem
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hZ5gc3V4dDvEPf6ke6ab1a8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/timeslots/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Timeslots
      subgroupDescription: ''
      title: 'User Delete'
      description: 'User delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timeslot.'
        required: true
        example: 31
        type: integer
        custom: []
    cleanUrlParameters:
      id: 31
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eZk1dgavPDb46hVE83af6c5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/social_medias
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Social Media'
      subgroupDescription: ''
      title: 'Social Media List'
      description: 'Social media list'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      s:
        name: s
        description: 'Search keyword'
        required: true
        example: omnis
        type: string
        custom: []
      p:
        name: p
        description: 'Page number, default=20'
        required: true
        example: 1
        type: integer
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept type,link,enable'
        required: true
        example: type
        type: string
        custom: []
      'filter[type]':
        name: 'filter[type]'
        description: 'Filter by type'
        required: true
        example: et
        type: string
        custom: []
      'filter[enable]':
        name: 'filter[enable]'
        description: 'Filter by enable'
        required: true
        example: 20
        type: integer
        custom: []
      'filter[link]':
        name: 'filter[link]'
        description: 'Filter by link'
        required: true
        example: distinctio
        type: string
        custom: []
    cleanQueryParameters:
      s: omnis
      p: 1
      sort: type
      'filter[type]': et
      'filter[enable]': 20
      'filter[link]': distinctio
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hgek5a4aDEbvf6Zd1683VPc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/social_medias/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Social Media'
      subgroupDescription: ''
      title: 'Social Media Detail'
      description: 'Social media detail'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the social media.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PVkb34Eh6v1dc8Zaf5D6gea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/social_medias/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Social Media'
      subgroupDescription: ''
      title: 'Social Media Create'
      description: 'Social media create'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the social media.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      link:
        name: link
        description: ''
        required: false
        example: reprehenderit
        type: string
        custom: []
      enable:
        name: enable
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      link: reprehenderit
      enable: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6P6Veagc51kvDEdZhb3a84f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/social_medias/{id}'
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Social Media'
      subgroupDescription: ''
      title: 'Social Media Delete'
      description: 'Social media delete'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the social media.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 164cdaa8hbZV5fgPkE63vDe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/options/roles
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Roles
      subgroupDescription: ''
      title: Options
      description: 'List out all records for select options'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 43E6egdk6Zb5acvhP18aVfD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/options/permissions
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Permissions
      subgroupDescription: ''
      title: Options
      description: 'List out all records for select options'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4hvcd6D58kPVg3bfa6aeZ1E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/options/customers
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Customers
      subgroupDescription: ''
      title: Options
      description: 'List out all records for select options'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[id]':
        name: 'filter[id]'
        description: 'Filter by customer id'
        required: true
        example: 2
        type: integer
        custom: []
      'filter[name]':
        name: 'filter[name]'
        description: 'Filter by customer name'
        required: true
        example: porro
        type: string
        custom: []
      'filter[tel]':
        name: 'filter[tel]'
        description: 'Filter by customer tel'
        required: true
        example: dolorem
        type: string
        custom: []
      'filter[email]':
        name: 'filter[email]'
        description: 'Filter by customer email'
        required: true
        example: eius
        type: string
        custom: []
      sort:
        name: sort
        description: 'Sort by column name, `-` equal to descending. Accept id,name,tel,email'
        required: true
        example: '-id'
        type: string
        custom: []
    cleanQueryParameters:
      'filter[id]': 2
      'filter[name]': porro
      'filter[tel]': dolorem
      'filter[email]': eius
      sort: '-id'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ka6hZd1vbaVEP45ec68fg3D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/row_updates/banners
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Row Update Banner'
      description: 'Datatable row update banner sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The id of the record'
        required: true
        example: 20
        type: integer
        custom: []
      sequence:
        name: sequence
        description: 'The sequence of the record'
        required: true
        example: 2
        type: integer
        custom: []
    cleanBodyParameters:
      id: 20
      sequence: 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vD6cbVZdhka1E8aef54g3P6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/row_updates/categories
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Row Update Category'
      description: 'Datatable row update category sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The id of the record'
        required: true
        example: 5
        type: integer
        custom: []
      sequence:
        name: sequence
        description: 'The sequence of the record'
        required: true
        example: 18
        type: integer
        custom: []
    cleanBodyParameters:
      id: 5
      sequence: 18
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V4EfZk6d5ahvDag1c63bPe8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/row_updates/services
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Row Update Service'
      description: 'Datatable row update service sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The id of the record'
        required: true
        example: 9
        type: integer
        custom: []
      sequence:
        name: sequence
        description: 'The sequence of the record'
        required: true
        example: 18
        type: integer
        custom: []
    cleanBodyParameters:
      id: 9
      sequence: 18
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3PZd5E8f6bkaDe16vaghc4V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/row_updates/districts
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'Row Update District'
      description: 'Datatable row update district sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The id of the record'
        required: true
        example: 7
        type: integer
        custom: []
      sequence:
        name: sequence
        description: 'The sequence of the record'
        required: true
        example: 6
        type: integer
        custom: []
    cleanBodyParameters:
      id: 7
      sequence: 6
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Dvab4cZgea6fEhd65kV1P8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/drags/banners
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Drag Update Banner'
      description: 'Datatable drag update banner sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rows:
        name: rows
        description: ''
        required: true
        example:
          - ad
        type: 'string[]'
        custom: []
      'rows[].id':
        name: 'rows[].id'
        description: 'The id of the record'
        required: true
        example: 6
        type: integer
        custom: []
      'rows[].sequence':
        name: 'rows[].sequence'
        description: 'The sequence of the record'
        required: true
        example: 4
        type: integer
        custom: []
    cleanBodyParameters:
      rows:
        - ad
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1VbvP8a5Dka4ZcdhgE36f6e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/drags/categories
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Drag Update Category'
      description: 'Datatable drag update category sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rows:
        name: rows
        description: ''
        required: true
        example:
          - et
        type: 'string[]'
        custom: []
      'rows[].id':
        name: 'rows[].id'
        description: 'The id of the record'
        required: true
        example: 16
        type: integer
        custom: []
      'rows[].sequence':
        name: 'rows[].sequence'
        description: 'The sequence of the record'
        required: true
        example: 14
        type: integer
        custom: []
    cleanBodyParameters:
      rows:
        - et
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e1bPakvZfc548636DdghVaE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/drags/services
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Drag Update Service'
      description: 'Datatable drag update service sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rows:
        name: rows
        description: ''
        required: true
        example:
          - praesentium
        type: 'string[]'
        custom: []
      'rows[].id':
        name: 'rows[].id'
        description: 'The id of the record'
        required: true
        example: 13
        type: integer
        custom: []
      'rows[].sequence':
        name: 'rows[].sequence'
        description: 'The sequence of the record'
        required: true
        example: 8
        type: integer
        custom: []
    cleanBodyParameters:
      rows:
        - praesentium
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 15Eb4vchka6g3ZPed6Vf8Da'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/drags/districts
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'Drag Update District'
      description: 'Datatable drag update district sequence'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      rows:
        name: rows
        description: ''
        required: true
        example:
          - sit
        type: 'string[]'
        custom: []
      'rows[].id':
        name: 'rows[].id'
        description: 'The id of the record'
        required: true
        example: 9
        type: integer
        custom: []
      'rows[].sequence':
        name: 'rows[].sequence'
        description: 'The sequence of the record'
        required: true
        example: 12
        type: integer
        custom: []
    cleanBodyParameters:
      rows:
        - sit
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ac6hEbD4gka1f6P53ZV8ved'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bulk_updates/banners
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Banners
      subgroupDescription: ''
      title: 'Bulk Update Banner'
      description: 'Bulk update banners param or delete on listing page'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The id of the record'
        required: true
        example:
          - 13
        type: 'integer[]'
        custom: []
      enable:
        name: enable
        description: 'Enable or disable the record'
        required: true
        example: true
        type: boolean
        custom: []
      hot:
        name: hot
        description: 'Update hot(Apply to service API only)'
        required: true
        example: true
        type: boolean
        custom: []
      delete:
        name: delete
        description: 'Delete selected record'
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      ids:
        - 13
      enable: true
      hot: true
      delete: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e8Z4ac1vD53fhbVa6dkEgP6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bulk_updates/categories
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Categories
      subgroupDescription: ''
      title: 'Bulk Update Category'
      description: 'Bulk update categories param or delete on listing page'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The id of the record'
        required: true
        example:
          - 20
        type: 'integer[]'
        custom: []
      enable:
        name: enable
        description: 'Enable or disable the record'
        required: true
        example: false
        type: boolean
        custom: []
      hot:
        name: hot
        description: 'Update hot(Apply to service API only)'
        required: true
        example: false
        type: boolean
        custom: []
      delete:
        name: delete
        description: 'Delete selected record'
        required: true
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      ids:
        - 20
      enable: false
      hot: false
      delete: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PVed8b635hgkaDa6f1vcZE4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bulk_updates/services
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Services
      subgroupDescription: ''
      title: 'Bulk Update Service'
      description: 'Bulk update services param or delete on listing page'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The id of the record'
        required: true
        example:
          - 2
        type: 'integer[]'
        custom: []
      enable:
        name: enable
        description: 'Enable or disable the record'
        required: true
        example: true
        type: boolean
        custom: []
      hot:
        name: hot
        description: 'Update hot(Apply to service API only)'
        required: true
        example: true
        type: boolean
        custom: []
      delete:
        name: delete
        description: 'Delete selected record'
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      ids:
        - 2
      enable: true
      hot: true
      delete: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer va5DZ83kgEahf61cV6e4bdP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bulk_updates/districts
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Districts
      subgroupDescription: ''
      title: 'Bulk Update District'
      description: 'Bulk update districts param or delete on listing page'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The id of the record'
        required: true
        example:
          - 10
        type: 'integer[]'
        custom: []
      enable:
        name: enable
        description: 'Enable or disable the record'
        required: true
        example: true
        type: boolean
        custom: []
      hot:
        name: hot
        description: 'Update hot(Apply to service API only)'
        required: true
        example: false
        type: boolean
        custom: []
      delete:
        name: delete
        description: 'Delete selected record'
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      ids:
        - 10
      enable: true
      hot: false
      delete: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5eV34kvgca6Eab8dZPD16hf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bulk_updates/reviews
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: Reviews
      subgroupDescription: ''
      title: 'Bulk Update Review'
      description: 'Bulk update reviews param or delete on listing page'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The id of the record'
        required: true
        example:
          - 19
        type: 'integer[]'
        custom: []
      enable:
        name: enable
        description: 'Enable or disable the record'
        required: true
        example: true
        type: boolean
        custom: []
      hot:
        name: hot
        description: 'Update hot(Apply to service API only)'
        required: true
        example: false
        type: boolean
        custom: []
      delete:
        name: delete
        description: 'Delete selected record'
        required: true
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      ids:
        - 19
      enable: true
      hot: false
      delete: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6cgVaP8d1h465bvaE3kefDZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/bulk_updates/social_medias
    metadata:
      groupName: 'CMS API'
      groupDescription: ''
      subgroup: 'Social Media'
      subgroupDescription: ''
      title: 'Bulk Update Social Media'
      description: 'Bulk update social media param or delete on listing page'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ids:
        name: ids
        description: 'The id of the record'
        required: true
        example:
          - 15
        type: 'integer[]'
        custom: []
      enable:
        name: enable
        description: 'Enable or disable the record'
        required: true
        example: false
        type: boolean
        custom: []
      hot:
        name: hot
        description: 'Update hot(Apply to service API only)'
        required: true
        example: true
        type: boolean
        custom: []
      delete:
        name: delete
        description: 'Delete selected record'
        required: true
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      ids:
        - 15
      enable: false
      hot: true
      delete: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aPgDe8E64kca56bvfZ1Vd3h'
    controller: null
    method: null
    route: null
    custom: []
